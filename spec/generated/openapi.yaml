openapi: 3.0.0
info:
  title: Frost
  version: 0.1.0
tags: []
paths:
  /api/v1/accounts:
    post:
      operationId: Accounts_register
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.Account'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/ApiVersion1.NewAccount'
              required:
                - body
  /api/v1/chatrooms:
    post:
      operationId: ChatRooms_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.ChatRoom'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/ApiVersion1.NewChatRoom'
              required:
                - body
  /api/v1/chatrooms/{chatRoomId}/members:
    get:
      operationId: ChatRoomMembers_list
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiVersion1.ChatRoomMember'
  /api/v1/chatrooms/{chatRoomId}/members/{userId}:
    post:
      operationId: ChatRoomMembers_create
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.ChatRoomMember'
    delete:
      operationId: ChatRoomMembers_delete
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/chatrooms/{chatRoomId}/posts:
    post:
      operationId: ChatRoomPosts_create
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.ChatRoomPost'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/ApiVersion1.NewChatRoomPost'
              required:
                - body
  /api/v1/chatrooms/{chatRoomId}/posts/{postId}:
    get:
      operationId: ChatRoomPosts_get
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.ChatRoomPost'
    delete:
      operationId: ChatRoomPosts_delete
      parameters:
        - name: chatRoomId
          in: path
          required: true
          schema:
            type: string
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/chatrooms/{id}:
    delete:
      operationId: ChatRooms_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/me:
    get:
      operationId: Me_get
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.Account'
  /api/v1/timelines/posts:
    post:
      operationId: TimelinePosts_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.TimelinePost'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/ApiVersion1.NewTimelinePost'
              required:
                - body
  /api/v1/timelines/posts/{id}:
    get:
      operationId: TimelinePosts_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.TimelinePost'
    delete:
      operationId: TimelinePosts_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/users:
    post:
      operationId: Users_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/ApiVersion1.NewUser'
              required:
                - body
  /api/v1/users/{id}:
    get:
      operationId: Users_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion1.User'
    delete:
      operationId: Users_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
components:
  schemas:
    ApiVersion1.Account:
      type: object
      required:
        - accountId
        - name
        - passwordAuthEnabled
        - users
      properties:
        accountId:
          type: string
        name:
          type: string
        passwordAuthEnabled:
          type: boolean
        users:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersion1.User'
    ApiVersion1.ChatRoom:
      type: object
      required:
        - chatRoomId
        - title
      properties:
        chatRoomId:
          type: string
        title:
          type: string
    ApiVersion1.ChatRoomMember:
      type: object
      required:
        - userId
        - chatRoomId
      properties:
        userId:
          type: string
        chatRoomId:
          type: string
    ApiVersion1.ChatRoomPost:
      type: object
      required:
        - postId
        - chatRoomId
        - userId
        - content
      properties:
        postId:
          type: string
        chatRoomId:
          type: string
        userId:
          type: string
        content:
          type: string
    ApiVersion1.NewAccount:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
        password:
          type: string
    ApiVersion1.NewChatRoom:
      type: object
      required:
        - title
      properties:
        title:
          type: string
    ApiVersion1.NewChatRoomPost:
      type: object
      required:
        - content
      properties:
        content:
          type: string
    ApiVersion1.NewTimelinePost:
      type: object
      required:
        - content
      properties:
        content:
          type: string
    ApiVersion1.NewUser:
      type: object
      required:
        - name
        - displayName
      properties:
        name:
          type: string
        displayName:
          type: string
    ApiVersion1.TimelinePost:
      type: object
      required:
        - postId
        - userId
        - content
      properties:
        postId:
          type: string
        userId:
          type: string
        content:
          type: string
    ApiVersion1.User:
      type: object
      required:
        - userId
        - name
        - displayName
      properties:
        userId:
          type: string
        name:
          type: string
        displayName:
          type: string
servers:
  - url: http://localhost:3000
    description: local server
    variables: {}
