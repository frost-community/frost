openapi: 3.0.0
info:
  title: Frost
  version: 0.1.0
tags:
  - name: Auth
paths:
  /api/v1/auth/signin:
    post:
      tags:
        - Auth
      operationId: AuthApi_signin
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.AuthResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.v1.SigninBody'
  /api/v1/auth/signup:
    post:
      tags:
        - Auth
      operationId: AuthApi_signup
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.AuthResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.v1.SignupBody'
  /api/v1/chatRoom/createChatRoom:
    post:
      operationId: ChatRoomApi_createChatRoom
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.ChatRoom'
  /api/v1/chatRoom/createLeaf:
    post:
      operationId: ChatRoomApi_createLeaf
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.Leaf'
  /api/v1/chatRoom/deleteChatRoom:
    post:
      operationId: ChatRoomApi_deleteChatRoom
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/chatRoom/getChatRoom:
    get:
      operationId: ChatRoomApi_getChatRoom
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.ChatRoom'
  /api/v1/chatRoom/getTimeline:
    get:
      operationId: ChatRoomApi_getTimeline
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.Leaf'
  /api/v1/chatRoom/searchChatRooms:
    get:
      operationId: ChatRoomApi_searchChatRooms
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.ChatRoom'
  /api/v1/leaf/createLeaf:
    post:
      operationId: LeafApi_createLeaf
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.Leaf'
  /api/v1/leaf/deleteLeaf:
    post:
      operationId: LeafApi_deleteLeaf
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/leaf/getLeaf:
    get:
      operationId: LeafApi_getLeaf
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.Leaf'
  /api/v1/leaf/searchLeafs:
    get:
      operationId: LeafApi_searchLeafs
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.Leaf'
  /api/v1/user/deleteUser:
    post:
      operationId: UserApi_deleteUser
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/user/followUser:
    post:
      operationId: UserApi_followUser
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /api/v1/user/getFollowings:
    get:
      operationId: UserApi_getFollowings
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.User'
  /api/v1/user/getHomeTimeline:
    get:
      operationId: UserApi_getHomeTimeline
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.User'
  /api/v1/user/getUser:
    get:
      operationId: UserApi_getUser
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.v1.User'
  /api/v1/user/searchUsers:
    get:
      operationId: UserApi_searchUsers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.v1.User'
  /api/v1/user/unfollowUser:
    post:
      operationId: UserApi_unfollowUser
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
components:
  schemas:
    Api.v1.AuthResult:
      type: object
      required:
        - accessToken
        - refreshToken
        - user
      properties:
        accessToken:
          $ref: '#/components/schemas/Api.v1.Token'
        refreshToken:
          $ref: '#/components/schemas/Api.v1.Token'
        user:
          $ref: '#/components/schemas/Api.v1.User'
    Api.v1.ChatRoom:
      type: object
      required:
        - chatRoomId
        - title
        - description
      properties:
        chatRoomId:
          type: string
        title:
          type: string
        description:
          type: string
    Api.v1.Leaf:
      type: object
      required:
        - leafId
        - userId
        - content
      properties:
        leafId:
          type: string
        chatRoomId:
          type: string
        userId:
          type: string
        content:
          type: string
    Api.v1.SigninBody:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        password:
          type: string
    Api.v1.SignupBody:
      type: object
      required:
        - name
        - displayName
      properties:
        name:
          type: string
        password:
          type: string
        displayName:
          type: string
    Api.v1.Token:
      type: object
      required:
        - token
        - scopes
      properties:
        token:
          type: string
        scopes:
          type: array
          items:
            type: string
    Api.v1.User:
      type: object
      required:
        - userId
        - name
        - displayName
        - passwordAuthEnabled
      properties:
        userId:
          type: string
        name:
          type: string
        displayName:
          type: string
        passwordAuthEnabled:
          type: boolean
servers:
  - url: http://localhost:3000
    description: local server
    variables: {}
