services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: frontend
    working_dir: /workspaces
    # volumes:
    #   - .:/workspaces:cached
    command: sleep infinity
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - frost-net-internal

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      target: server
    working_dir: /workspaces
    # volumes:
    #   - .:/workspaces:cached
    command: sleep infinity
    ports:
      - "3001:3001"
    depends_on:
      - server-db
    networks:
      - frost-net-internal

  server-db:
    container_name: server-db
    build:
      context: .
      dockerfile: ./server-db/Dockerfile
      target: server-db
    volumes:
      - ./server-db/data:/var/lib/postgresql/data
      - ./server-db/init:/docker-entrypoint-initdb.d
    working_dir: /workspaces
    command: sleep infinity
    environment:
      POSTGRES_DB: frost_server
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # ports:
    #   - "5432:5432"
    networks:
      - frost-net-internal

  identity:
    build:
      context: .
      dockerfile: ./identity/Dockerfile
      target: identity
    working_dir: /workspaces
    # volumes:
    #   - .:/workspaces:cached
    command: sleep infinity
    ports:
      - "3002:3002"
    depends_on:
      - identity-db
    networks:
      - frost-net-internal

  identity-db:
    container_name: identity-db
    build:
      context: .
      dockerfile: ./identity-db/Dockerfile
      target: identity-db
    volumes:
      - ./identity-db/data:/var/lib/postgresql/data
      - ./identity-db/init:/docker-entrypoint-initdb.d
    working_dir: /workspaces
    command: sleep infinity
    environment:
      POSTGRES_DB: frost_identity
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # ports:
    #   - "5432:5432"
    networks:
      - frost-net-internal

networks:
  frost-net-internal:
